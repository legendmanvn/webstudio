<?xml version="1.0" encoding="utf-8" ?>
<autofac>
  <components>
    <container name ="api">
      <component
          type="ASC.Specific.AscApiConfiguration, ASC.Specific"
          service="ASC.Api.Interfaces.IApiConfiguration, ASC.Api"
          instance-scope="single-instance">
        <parameters>
          <parameter name="prefix" value="api" />
          <parameter name="version" value="2.0" />
          <parameter name="maxPage" value="1000" />
        </parameters>
      </component>
      <component
          type="ASC.Specific.AscCookieAuthorization, ASC.Specific"
          service="ASC.Api.Interfaces.IApiAuthorization, ASC.Api"
          instance-scope="single-instance"
          name="asc_cookie" />
      <component
          type="ASC.Specific.AscBasicAuthorization, ASC.Specific"
          service="ASC.Api.Interfaces.IApiAuthorization, ASC.Api"
          instance-scope="single-instance"
          name="asc_basic"/>
      <component
          type="ASC.Specific.Log4NetLog, ASC.Specific"
          service="ASC.Api.Logging.ILog, ASC.Api"
          instance-scope="single-instance"/>
      <component
          type="ASC.Specific.GlobalFilters.ProductSecurityFilter, ASC.Specific"
          service="ASC.Api.Attributes.ApiCallFilter, ASC.Api"
          instance-scope="single-instance"
          name="ProductSecurityFilter"/>
      <component
          type="ASC.Api.Employee.EmployeeApi, ASC.Api.Employee"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="people"/>
      <component
          type="ASC.Api.Employee.GroupsApi, ASC.Api.Employee"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="group"/>
      <component
          type="ASC.Api.Community.CommunityApi, ASC.Api.Community"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="community"/>
      <component
          type="ASC.Api.Projects.ProjectApi, ASC.Api.Projects"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="project"/>
      <component
          type="ASC.Api.Projects.ProjectBootstrap, ASC.Api.Projects"
          service="ASC.Api.Interfaces.IApiBootstrapper, ASC.Api"
          instance-scope="single-instance"
          name="projectRegistration"/>
      <component
          type="ASC.Api.CRM.CRMApi, ASC.Api.CRM"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="crm"/>
      <component
          type="ASC.Api.CRM.CRMBootstrap, ASC.Api.CRM"
          service="ASC.Api.Interfaces.IApiBootstrapper, ASC.Api"
          instance-scope="single-instance"
          name="crm"/>
      <component
          type="ASC.Api.Settings.SettingsApi, ASC.Api.Settings"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="settings"/>
      <component
          type="ASC.Api.Documents.DocumentsApi, ASC.Api.Documents"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="files"/>
      <component
          type="ASC.Web.Files.Services.WCFService.FileStorageServiceController, ASC.Web.Files"
          service="ASC.Web.Files.Services.WCFService.IFileStorageService, ASC.Web.Files"
          instance-scope="single-instance"/>
      <component
          type="ASC.Api.Calendar.CalendarApi, ASC.Api.Calendar"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="calendar"/>
      <component
          type="ASC.Specific.AuthorizationApi.AuthenticationEntryPoint, ASC.Specific"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="authentication"/>
      <component
          type="ASC.Specific.CapabilitiesApi.CapabilitiesEntryPoint, ASC.Specific"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="capabilities"/>
      <component
          type="ASC.Api.Feed.FeedApi, ASC.Api.Feed"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="feed"/>
      <component
          type="ASC.Api.Security.SecurityApi, ASC.Api.Security"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="security"/>
      <component
          type="ASC.Api.MailServer.MailServerApi, ASC.Api.MailServer"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="mailserver"/>
      <component
          type="ASC.Api.Mail.MailApi, ASC.Api.Mail"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="mail"/>
      <component
          type="ASC.Api.Portal.PortalApi, ASC.Api.Portal"
          service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
          name="portal"/>
      <component
          type="ASC.Api.Impl.ApiManager, ASC.Api"
          service="ASC.Api.Interfaces.IApiManager, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Impl.ApiSmartListResponceFilter, ASC.Api"
          service="ASC.Api.Interfaces.IApiResponceFilter, ASC.Api"
          inject-properties="yes"
          name="smartfilter">
      </component>
      <component
          type="ASC.Api.Impl.ApiMethodCall, ASC.Api"
          service="ASC.Api.Interfaces.IApiMethodCall, ASC.Api"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Impl.ApiArgumentBuilder, ASC.Api"
          service="ASC.Api.Interfaces.IApiArgumentBuilder, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Impl.Serializers.JsonNetSerializer, ASC.Api"
          service="ASC.Api.Interfaces.IApiSerializer, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"
          name="json.net.serializer"/>
      <component
          type="ASC.Api.Impl.Responders.ContentResponder, ASC.Api"
          service="ASC.Api.Interfaces.IApiResponder, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"
          name="content_responder"/>
      <component
          type="ASC.Api.Impl.Responders.DirectResponder, ASC.Api"
          service="ASC.Api.Interfaces.IApiResponder, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"
          name="direct_responder"/>
      <component
          type="ASC.Api.Impl.Serializers.SerializerResponder, ASC.Api"
          service="ASC.Api.Interfaces.IApiResponder, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"
          name="serialzer"/>
      <component
          type="ASC.Api.Impl.Invokers.ApiSimpleMethodInvoker, ASC.Api"
          service="ASC.Api.Interfaces.IApiMethodInvoker, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Impl.ApiStoragePath, ASC.Api"
          service="ASC.Api.Interfaces.IApiStoragePath, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Impl.ApiKeyValueInMemoryStorage, ASC.Api"
          service="ASC.Api.Interfaces.Storage.IApiKeyValueStorage, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Impl.ApiRouteConfigurator, ASC.Api"
          service="ASC.Api.Interfaces.IApiRouteConfigurator, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Impl.Routing.ApiRouteRegistrator, ASC.Api"
          service="ASC.Api.Interfaces.IApiRouteRegistrator, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"
          name="rest"/>
      <component
          type="ASC.Api.Impl.Routing.ApiBatchRouteRegitrator, ASC.Api"
          service="ASC.Api.Interfaces.IApiRouteRegistrator, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"
          name="batch"/>
      <component
          type="ASC.Api.Impl.Routing.ApiAccessControlRouteRegistrator, ASC.Api"
          service="ASC.Api.Interfaces.IApiRouteRegistrator, ASC.Api"
          instance-scope="single-instance"
          inject-properties="yes"
          name="access"/>
      <component
          type="ASC.Api.Impl.ApiHttpHandler, ASC.Api"
          service="ASC.Api.Interfaces.IApiHttpHandler, ASC.Api"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Impl.ApiRouteHandler, ASC.Api"
          service="ASC.Api.Interfaces.IApiRouteHandler, ASC.Api"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Batch.ApiBatchHttpHandler, ASC.Api"
          inject-properties="yes"/>
      <component
          type="ASC.Api.Batch.ApiBatchRouteHandler, ASC.Api"
          inject-properties="yes"/>
      <component
        type="ASC.Api.Impl.ApiContext, ASC.Api"
        instance-scope="per-lifetime-scope"/>
      <component
        type="ASC.Api.Impl.ApiStandartResponce, ASC.Api"
        service="ASC.Api.Interfaces.IApiStandartResponce, ASC.Api"
        inject-properties="yes"/>
    </container>
    <container name ="files">
      <component
        type="ASC.Files.Thirdparty.ProviderDao.ProviderDaoFactory, ASC.Files.Thirdparty"
        service="ASC.Files.Core.IDaoFactory, ASC.Web.Files"
        instance-scope="single-instance"/>
      <component
        type="ASC.Web.Files.Services.WCFService.FileStorageServiceController, ASC.Web.Files"
        service="ASC.Web.Files.Services.WCFService.IFileStorageService, ASC.Web.Files"
        instance-scope="single-instance"/>
    </container>
  </components>
</autofac>